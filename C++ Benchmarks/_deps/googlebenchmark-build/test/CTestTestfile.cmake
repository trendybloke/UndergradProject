# CMake generated Testfile for 
# Source directory: C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test
# Build directory: C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;64;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;64;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;64;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;64;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(benchmark NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(spec_arg "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/spec_arg_test.exe" "--benchmark_filter=BM_NotChosen")
  set_tests_properties(spec_arg PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;67;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(spec_arg "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/spec_arg_test.exe" "--benchmark_filter=BM_NotChosen")
  set_tests_properties(spec_arg PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;67;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(spec_arg "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/spec_arg_test.exe" "--benchmark_filter=BM_NotChosen")
  set_tests_properties(spec_arg PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;67;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(spec_arg "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/spec_arg_test.exe" "--benchmark_filter=BM_NotChosen")
  set_tests_properties(spec_arg PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;67;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(spec_arg NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(spec_arg_verbosity "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/spec_arg_verbosity_test.exe" "--v=42")
  set_tests_properties(spec_arg_verbosity PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;70;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(spec_arg_verbosity "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/spec_arg_verbosity_test.exe" "--v=42")
  set_tests_properties(spec_arg_verbosity PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;70;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(spec_arg_verbosity "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/spec_arg_verbosity_test.exe" "--v=42")
  set_tests_properties(spec_arg_verbosity PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;70;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(spec_arg_verbosity "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/spec_arg_verbosity_test.exe" "--v=42")
  set_tests_properties(spec_arg_verbosity PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;70;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(spec_arg_verbosity NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(benchmark_setup_teardown "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/benchmark_setup_teardown_test.exe")
  set_tests_properties(benchmark_setup_teardown PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;73;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(benchmark_setup_teardown "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/benchmark_setup_teardown_test.exe")
  set_tests_properties(benchmark_setup_teardown PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;73;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(benchmark_setup_teardown "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/benchmark_setup_teardown_test.exe")
  set_tests_properties(benchmark_setup_teardown PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;73;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(benchmark_setup_teardown "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/benchmark_setup_teardown_test.exe")
  set_tests_properties(benchmark_setup_teardown PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;73;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(benchmark_setup_teardown NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(min_time_flag_time "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/benchmark_min_time_flag_time_test.exe")
  set_tests_properties(min_time_flag_time PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;82;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(min_time_flag_time "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/benchmark_min_time_flag_time_test.exe")
  set_tests_properties(min_time_flag_time PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;82;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(min_time_flag_time "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/benchmark_min_time_flag_time_test.exe")
  set_tests_properties(min_time_flag_time PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;82;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(min_time_flag_time "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/benchmark_min_time_flag_time_test.exe")
  set_tests_properties(min_time_flag_time PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;82;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(min_time_flag_time NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(min_time_flag_iters "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/benchmark_min_time_flag_iters_test.exe")
  set_tests_properties(min_time_flag_iters PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;85;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(min_time_flag_iters "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/benchmark_min_time_flag_iters_test.exe")
  set_tests_properties(min_time_flag_iters PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;85;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(min_time_flag_iters "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/benchmark_min_time_flag_iters_test.exe")
  set_tests_properties(min_time_flag_iters PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;85;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(min_time_flag_iters "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/benchmark_min_time_flag_iters_test.exe")
  set_tests_properties(min_time_flag_iters PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;85;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(min_time_flag_iters NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_simple "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_simple "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_simple "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_simple "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_simple NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_simple_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_simple_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_simple_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_simple_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=Foo" "3")
  set_tests_properties(filter_simple_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;87;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_simple_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_simple_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_simple_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_simple_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_simple_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_simple_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_simple_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_simple_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_simple_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_simple_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-Foo" "2")
  set_tests_properties(filter_simple_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;88;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_simple_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_suffix "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_suffix "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_suffix "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_suffix "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_suffix NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_suffix_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_suffix_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_suffix_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_suffix_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=BM_.*" "4")
  set_tests_properties(filter_suffix_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;89;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_suffix_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_suffix_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_suffix_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_suffix_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_suffix_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_suffix_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_suffix_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_suffix_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_suffix_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_suffix_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-BM_.*" "1")
  set_tests_properties(filter_suffix_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;90;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_suffix_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_all "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_all "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_all "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_all "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_all NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_all_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_all_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_all_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_all_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*" "5")
  set_tests_properties(filter_regex_all_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;91;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_all_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_all_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_all_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_all_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_all_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_all_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_all_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_all_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_all_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_all_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*" "0")
  set_tests_properties(filter_regex_all_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;92;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_all_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_blank "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_blank "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_blank "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_blank "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_blank NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_blank_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_blank_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_blank_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_blank_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=" "5")
  set_tests_properties(filter_regex_blank_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;93;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_blank_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_blank_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_blank_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_blank_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_blank_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_blank_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_blank_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_blank_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_blank_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_blank_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-" "0")
  set_tests_properties(filter_regex_blank_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;94;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_blank_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_none "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_none "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_none "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_none "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_none NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_none_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_none_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_none_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_none_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=monkey" "0")
  set_tests_properties(filter_regex_none_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;95;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_none_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_none_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_none_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_none_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_none_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_none_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_none_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_none_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_none_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_none_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-monkey" "5")
  set_tests_properties(filter_regex_none_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;96;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_none_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_wildcard "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_wildcard "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_wildcard "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_wildcard "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_wildcard NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_wildcard_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_wildcard_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_wildcard_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_wildcard_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Foo.*" "3")
  set_tests_properties(filter_regex_wildcard_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;97;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_wildcard_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_wildcard_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_wildcard_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_wildcard_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_wildcard_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_wildcard_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_wildcard_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_wildcard_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_wildcard_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_wildcard_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Foo.*" "2")
  set_tests_properties(filter_regex_wildcard_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;98;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_wildcard_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^BM_.*" "4")
  set_tests_properties(filter_regex_begin_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;99;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^BM_.*" "1")
  set_tests_properties(filter_regex_begin_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;100;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin2 "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2 PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin2 "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2 PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin2 "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2 PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin2 "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2 PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin2 NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin2_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin2_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin2_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin2_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=^N" "1")
  set_tests_properties(filter_regex_begin2_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;101;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin2_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin2_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin2_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin2_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin2_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin2_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_begin2_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_begin2_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_begin2_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_begin2_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-^N" "4")
  set_tests_properties(filter_regex_begin2_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;102;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_begin2_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_end "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_end "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_end "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_end "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_end NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_end_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_end_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_end_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_end_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=.*Ba\$" "1")
  set_tests_properties(filter_regex_end_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;103;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_end_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_end_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_end_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_end_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_end_negative "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_min_time=0.01s" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;77;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_end_negative NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(filter_regex_end_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(filter_regex_end_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(filter_regex_end_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(filter_regex_end_negative_list_only "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/filter_test.exe" "--benchmark_list_tests" "--benchmark_filter=-.*Ba\$" "4")
  set_tests_properties(filter_regex_end_negative_list_only PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;78;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;104;add_filter_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(filter_regex_end_negative_list_only NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(options_benchmarks "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/options_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(options_benchmarks PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;107;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(options_benchmarks "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/options_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(options_benchmarks PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;107;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(options_benchmarks "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/options_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(options_benchmarks PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;107;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(options_benchmarks "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/options_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(options_benchmarks PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;107;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(options_benchmarks NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(basic_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/basic_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(basic_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;110;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(basic_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/basic_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(basic_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;110;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(basic_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/basic_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(basic_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;110;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(basic_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/basic_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(basic_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;110;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(basic_benchmark NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(repetitions_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/repetitions_test.exe" "--benchmark_min_time=0.01s" "--benchmark_repetitions=3")
  set_tests_properties(repetitions_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;113;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(repetitions_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/repetitions_test.exe" "--benchmark_min_time=0.01s" "--benchmark_repetitions=3")
  set_tests_properties(repetitions_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;113;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(repetitions_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/repetitions_test.exe" "--benchmark_min_time=0.01s" "--benchmark_repetitions=3")
  set_tests_properties(repetitions_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;113;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(repetitions_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/repetitions_test.exe" "--benchmark_min_time=0.01s" "--benchmark_repetitions=3")
  set_tests_properties(repetitions_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;113;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(repetitions_benchmark NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(diagnostics_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/diagnostics_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(diagnostics_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;116;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(diagnostics_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/diagnostics_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(diagnostics_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;116;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(diagnostics_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/diagnostics_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(diagnostics_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;116;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(diagnostics_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/diagnostics_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(diagnostics_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;116;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(diagnostics_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(skip_with_error_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/skip_with_error_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(skip_with_error_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;119;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(skip_with_error_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/skip_with_error_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(skip_with_error_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;119;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(skip_with_error_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/skip_with_error_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(skip_with_error_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;119;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(skip_with_error_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/skip_with_error_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(skip_with_error_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;119;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(skip_with_error_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(donotoptimize_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/donotoptimize_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(donotoptimize_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;127;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(donotoptimize_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/donotoptimize_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(donotoptimize_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;127;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(donotoptimize_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/donotoptimize_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(donotoptimize_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;127;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(donotoptimize_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/donotoptimize_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(donotoptimize_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;127;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(donotoptimize_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;130;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;130;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;130;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;130;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(fixture_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(register_benchmark_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/register_benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(register_benchmark_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;133;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(register_benchmark_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/register_benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(register_benchmark_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;133;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(register_benchmark_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/register_benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(register_benchmark_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;133;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(register_benchmark_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/register_benchmark_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(register_benchmark_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;133;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(register_benchmark_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(map_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/map_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(map_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;136;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(map_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/map_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(map_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;136;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(map_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/map_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(map_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;136;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(map_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/map_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(map_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;136;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(map_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(multiple_ranges_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/multiple_ranges_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(multiple_ranges_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;139;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(multiple_ranges_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/multiple_ranges_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(multiple_ranges_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;139;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(multiple_ranges_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/multiple_ranges_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(multiple_ranges_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;139;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(multiple_ranges_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/multiple_ranges_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(multiple_ranges_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;139;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(multiple_ranges_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(args_product_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/args_product_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(args_product_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;142;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(args_product_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/args_product_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(args_product_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;142;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(args_product_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/args_product_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(args_product_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;142;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(args_product_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/args_product_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(args_product_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;142;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(args_product_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(link_main_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/link_main_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(link_main_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;145;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(link_main_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/link_main_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(link_main_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;145;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(link_main_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/link_main_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(link_main_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;145;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(link_main_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/link_main_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(link_main_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;145;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(link_main_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(reporter_output_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/reporter_output_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(reporter_output_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;148;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(reporter_output_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/reporter_output_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(reporter_output_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;148;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(reporter_output_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/reporter_output_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(reporter_output_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;148;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(reporter_output_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/reporter_output_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(reporter_output_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;148;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(reporter_output_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(templated_fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/templated_fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(templated_fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;151;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(templated_fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/templated_fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(templated_fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;151;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(templated_fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/templated_fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(templated_fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;151;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(templated_fixture_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/templated_fixture_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(templated_fixture_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;151;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(templated_fixture_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(user_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/user_counters_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;154;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(user_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/user_counters_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;154;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(user_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/user_counters_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;154;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(user_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/user_counters_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;154;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(user_counters_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(perf_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/perf_counters_test.exe" "--benchmark_min_time=0.01s" "--benchmark_perf_counters=CYCLES,BRANCHES")
  set_tests_properties(perf_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;157;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(perf_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/perf_counters_test.exe" "--benchmark_min_time=0.01s" "--benchmark_perf_counters=CYCLES,BRANCHES")
  set_tests_properties(perf_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;157;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(perf_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/perf_counters_test.exe" "--benchmark_min_time=0.01s" "--benchmark_perf_counters=CYCLES,BRANCHES")
  set_tests_properties(perf_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;157;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(perf_counters_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/perf_counters_test.exe" "--benchmark_min_time=0.01s" "--benchmark_perf_counters=CYCLES,BRANCHES")
  set_tests_properties(perf_counters_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;157;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(perf_counters_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(internal_threading_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/internal_threading_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(internal_threading_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;160;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(internal_threading_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/internal_threading_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(internal_threading_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;160;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(internal_threading_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/internal_threading_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(internal_threading_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;160;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(internal_threading_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/internal_threading_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(internal_threading_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;160;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(internal_threading_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(report_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/report_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(report_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;163;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(report_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/report_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(report_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;163;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(report_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/report_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(report_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;163;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(report_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/report_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(report_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;163;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(report_aggregates_only_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(display_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/display_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(display_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;166;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(display_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/display_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(display_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;166;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(display_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/display_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(display_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;166;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(display_aggregates_only_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/display_aggregates_only_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(display_aggregates_only_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;166;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(display_aggregates_only_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(user_counters_tabular_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/user_counters_tabular_test.exe" "--benchmark_counters_tabular=true" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_tabular_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;169;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(user_counters_tabular_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/user_counters_tabular_test.exe" "--benchmark_counters_tabular=true" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_tabular_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;169;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(user_counters_tabular_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/user_counters_tabular_test.exe" "--benchmark_counters_tabular=true" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_tabular_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;169;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(user_counters_tabular_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/user_counters_tabular_test.exe" "--benchmark_counters_tabular=true" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_tabular_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;169;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(user_counters_tabular_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(user_counters_thousands_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/user_counters_thousands_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_thousands_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;172;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(user_counters_thousands_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/user_counters_thousands_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_thousands_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;172;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(user_counters_thousands_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/user_counters_thousands_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_thousands_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;172;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(user_counters_thousands_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/user_counters_thousands_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(user_counters_thousands_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;172;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(user_counters_thousands_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(memory_manager_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/memory_manager_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(memory_manager_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;175;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(memory_manager_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/memory_manager_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(memory_manager_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;175;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(memory_manager_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/memory_manager_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(memory_manager_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;175;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(memory_manager_test "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/memory_manager_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(memory_manager_test PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;175;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(memory_manager_test NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(complexity_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/complexity_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(complexity_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;210;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(complexity_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/complexity_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(complexity_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;210;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(complexity_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/complexity_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(complexity_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;210;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(complexity_benchmark "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/complexity_test.exe" "--benchmark_min_time=0.01s")
  set_tests_properties(complexity_benchmark PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;210;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(complexity_benchmark NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(benchmark_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/benchmark_gtest.exe")
  set_tests_properties(benchmark_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;228;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(benchmark_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/benchmark_gtest.exe")
  set_tests_properties(benchmark_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;228;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(benchmark_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/benchmark_gtest.exe")
  set_tests_properties(benchmark_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;228;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(benchmark_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/benchmark_gtest.exe")
  set_tests_properties(benchmark_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;228;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(benchmark_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(benchmark_name_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/benchmark_name_gtest.exe")
  set_tests_properties(benchmark_name_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;229;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(benchmark_name_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/benchmark_name_gtest.exe")
  set_tests_properties(benchmark_name_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;229;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(benchmark_name_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/benchmark_name_gtest.exe")
  set_tests_properties(benchmark_name_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;229;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(benchmark_name_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/benchmark_name_gtest.exe")
  set_tests_properties(benchmark_name_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;229;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(benchmark_name_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(benchmark_random_interleaving_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/benchmark_random_interleaving_gtest.exe")
  set_tests_properties(benchmark_random_interleaving_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;230;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(benchmark_random_interleaving_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/benchmark_random_interleaving_gtest.exe")
  set_tests_properties(benchmark_random_interleaving_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;230;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(benchmark_random_interleaving_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/benchmark_random_interleaving_gtest.exe")
  set_tests_properties(benchmark_random_interleaving_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;230;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(benchmark_random_interleaving_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/benchmark_random_interleaving_gtest.exe")
  set_tests_properties(benchmark_random_interleaving_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;230;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(benchmark_random_interleaving_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(commandlineflags_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/commandlineflags_gtest.exe")
  set_tests_properties(commandlineflags_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;231;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(commandlineflags_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/commandlineflags_gtest.exe")
  set_tests_properties(commandlineflags_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;231;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(commandlineflags_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/commandlineflags_gtest.exe")
  set_tests_properties(commandlineflags_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;231;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(commandlineflags_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/commandlineflags_gtest.exe")
  set_tests_properties(commandlineflags_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;231;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(commandlineflags_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(statistics_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/statistics_gtest.exe")
  set_tests_properties(statistics_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;232;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(statistics_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/statistics_gtest.exe")
  set_tests_properties(statistics_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;232;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(statistics_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/statistics_gtest.exe")
  set_tests_properties(statistics_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;232;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(statistics_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/statistics_gtest.exe")
  set_tests_properties(statistics_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;232;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(statistics_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(string_util_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/string_util_gtest.exe")
  set_tests_properties(string_util_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;233;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(string_util_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/string_util_gtest.exe")
  set_tests_properties(string_util_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;233;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(string_util_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/string_util_gtest.exe")
  set_tests_properties(string_util_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;233;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(string_util_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/string_util_gtest.exe")
  set_tests_properties(string_util_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;233;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(string_util_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(perf_counters_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/perf_counters_gtest.exe")
  set_tests_properties(perf_counters_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;234;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(perf_counters_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/perf_counters_gtest.exe")
  set_tests_properties(perf_counters_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;234;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(perf_counters_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/perf_counters_gtest.exe")
  set_tests_properties(perf_counters_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;234;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(perf_counters_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/perf_counters_gtest.exe")
  set_tests_properties(perf_counters_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;234;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(perf_counters_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(time_unit_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/time_unit_gtest.exe")
  set_tests_properties(time_unit_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;235;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(time_unit_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/time_unit_gtest.exe")
  set_tests_properties(time_unit_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;235;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(time_unit_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/time_unit_gtest.exe")
  set_tests_properties(time_unit_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;235;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(time_unit_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/time_unit_gtest.exe")
  set_tests_properties(time_unit_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;235;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(time_unit_gtest NOT_AVAILABLE)
endif()
if(CTEST_CONFIGURATION_TYPE MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(min_time_parse_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Debug/min_time_parse_gtest.exe")
  set_tests_properties(min_time_parse_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;236;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(min_time_parse_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/Release/min_time_parse_gtest.exe")
  set_tests_properties(min_time_parse_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;236;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(min_time_parse_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/MinSizeRel/min_time_parse_gtest.exe")
  set_tests_properties(min_time_parse_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;236;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
elseif(CTEST_CONFIGURATION_TYPE MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(min_time_parse_gtest "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-build/test/RelWithDebInfo/min_time_parse_gtest.exe")
  set_tests_properties(min_time_parse_gtest PROPERTIES  _BACKTRACE_TRIPLES "C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;225;add_test;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;236;add_gtest;C:/Users/joshp/Desktop/uni work/Year 3/Project/C++ Benchmarks/_deps/googlebenchmark-src/test/CMakeLists.txt;0;")
else()
  add_test(min_time_parse_gtest NOT_AVAILABLE)
endif()
